class AsteroidGeneration : ZilchComponent
{
    [Property] var AsteroidChunk : Archetype = null;
    
    var RandomGen : Random = Random();
    
    
    
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(init, Events.AllObjectsInitialized, this.OnAllObjectsInitialized);
    }

    function OnAllObjectsInitialized(event : CogInitializerEvent)
    {
        var asteroidArray = new Array[Cog]();
        
        var size = this.RandomGen.Range(5, 20);
        
        foreach(var child in this.Owner.Children)
        {
            asteroidArray.Add(child);
        }
        
        for(var i = 0.0; i < size; ++i)
        {
            
            if(asteroidArray.Count <= 0.0) return;
            
            var index = this.RandomGen.RangeExclusiveMax(0, asteroidArray.Count);
            
            var position = asteroidArray[index].Transform.WorldTranslation;
             
            var asteroidChunk = this.Space.CreateAtPosition(this.AsteroidChunk, position);
            
            if(asteroidChunk != null)
            {
                asteroidChunk.AttachToRelative(this.Owner);
            }
            
            asteroidArray.RemoveSwap(index);
        }
        
        foreach(var child in this.Owner.Children)
        {
            if(child.Name == "Asteroid Chunk")
            {
                child.GenerateCorrectSpriteSource.Generate = true;
            }
            
            if(child.Name == "Node")
            {
                child.Destroy();
            }
        }
    }
}
