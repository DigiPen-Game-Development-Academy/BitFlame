class AsteroidGeneration : ZilchComponent
{
    [Property] var Asteroid : Archetype = null;
    
    var RandomGen : Random = Random();
    
    var XPosArray : Array[any];
    
    var YPosArray : Array[any];
    
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    }
    
    function OnLogicUpdate(event : UpdateEvent)
    {
        if(Zero.Keyboard.KeyIsPressed(Keys.Space))
        {
            var size = this.RandomGen.Range(1, 10);
            
            for(var i = 0.0; i < size * size / 1.5; ++i)
            {
                var asteroid = this.Space.CreateAtPosition(this.Asteroid, this.Owner.Transform.Translation);
                
                
                
                for(var j = 0.0; j < size; ++j)
                {
                    var randomDir = Real3(Math.Round(this.RandomGen.Range(-1, 1)), Math.Round(this.RandomGen.Range(-1, 1)), 0.0);
                    
                    asteroid.Transform.Translation += randomDir;
                }
                
                foreach(var child in this.Owner.Children.All)
                {
                    while(child.Transform.Translation.X == asteroid.Transform.Translation.X && child.Transform.Translation.Y == asteroid.Transform.Translation.Y)
                    {
                        asteroid.Transform.Translation = Real3.Zero;
                        
                        for(var j = 0.0; j < size; ++j)
                        {
                            var randomDir = Real3(Math.Round(this.RandomGen.Range(-1, 1)), Math.Round(this.RandomGen.Range(-1, 1)), 0.0);
                            
                            asteroid.Transform.Translation += randomDir;
                        }
                    }
                    
                    if(child.Transform.Translation.X != asteroid.Transform.Translation.X && child.Transform.Translation.Y != asteroid.Transform.Translation.Y)
                    {
                        asteroid.AttachTo(this.Owner);
                        
                        break;
                    }
                }
            }
        }
    }
}
