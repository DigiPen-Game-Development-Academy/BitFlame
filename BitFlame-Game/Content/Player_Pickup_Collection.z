/*************************************
Filename: Player_Pickup_Collection.z
Author: Jakob McFarland
Contributors: Sage Dupuy
Last modified: 1/23/18
Brief: This Component will cause the owner to collect the set amount of resources when it collides with a resource pickup
******************************************/


class Player_Pickup_Collection : ZilchComponent
{
    //on initialize
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Owner, Events.CollisionStarted, this.OnCollisionStarted);
    }

    //on collision started
    function OnCollisionStarted(event : CollisionEvent)
    {
        var otherObject = event.OtherObject;
        
        if(otherObject.ResourcePickup != null)
        {
            this.GameSession.GameVars.PlayerResources += otherObject.ResourcePickup.PickupValue;
            otherObject.Destroy();
        }
        
        if(otherObject.OxygenPickup != null)
        {
            this.GameSession.GameVars.PlayerOxygen += otherObject.OxygenPickup.PickupValue;
            otherObject.Destroy();
        }
    }
}

// allows owner to collect this up as a resource pickup
class ResourcePickup : ZilchComponent
{
    [Property] var PickupValue : Integer = 0;
    
    [Property] var PickupRange : Real = 0.0;
    
    [Property] var PickupSpeed : Real = 0.0;
    
    function Initialize(init : CogInitializer)
    {
       Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
        var player = this.Space.FindObjectByName("Player");
        
        if(Math.Distance(this.Owner.Transform.Translation, player.Transform.Translation) <= this.PickupRange)
        {
            this.Owner.RigidBody.Velocity += Math.Normalize(player.Transform.Translation - this.Owner.Transform.Translation) * event.Dt * this.PickupSpeed;
        }
    }
}

// allows owner to collect this up as an oxygen pickup
class OxygenPickup : ZilchComponent
{
    [Property] var PickupValue : Integer = 0;
    
    [Property] var PickupRange : Real = 0.0;
    
    [Property] var PickupSpeed : Real = 0.0;
    
    function Initialize(init : CogInitializer)
    {
       Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
        var player = this.Space.FindObjectByName("Player");
        
        if(Math.Distance(this.Owner.Transform.Translation, player.Transform.Translation) <= this.PickupRange)
        {
            this.Owner.RigidBody.Velocity += Math.Normalize(player.Transform.Translation - this.Owner.Transform.Translation) * event.Dt * this.PickupSpeed;
        }
    }
}