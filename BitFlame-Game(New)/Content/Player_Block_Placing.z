/*************************************
Filename: Player_Block_Placing.z
Author: Jakob McFarland
Contributors: NULL
Last modified: 2/13/18
Brief: This Component allows the polayer to place blocks
******************************************/

class Player_Block_Placing : ZilchComponent
{
    [Dependency] var Transform : Transform = null;
    
    [Property] var PlacingRange : Integer = 6;
    
    //iron block
    [Property] var IronBlockPlaceKey : Keys;
    [Property] var IronBlockIronCost : Integer;
    [Property] var IronBlockArchetype : Archetype = Archetype.IronBlock;
    
    //oxygen pipe block
    [Property] var PipePlaceKey : Keys;
    [Property] var PipeIronCost : Integer;
    [Property] var PipeAluminiumCost : Integer;
    [Property] var PipeArchetype : Archetype = Archetype.OxygenPipe;
    
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Space, Events.MouseDown, this.OnMouseDown);
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
        var arm = this.Owner.FindChildByName("Arm");  
        
        if(Zero.Keyboard.KeyIsDown(this.IronBlockPlaceKey) || Zero.Keyboard.KeyIsDown(this.PipePlaceKey))
        {
             arm.PlayerShooting.CanShoot = false;
        }
        else
        {
            arm.PlayerShooting.CanShoot = true;
        }
            
    }

    function OnMouseDown(event : ViewportMouseEvent)
    {
        var mousePosition = event.ToWorldZPlane(0.0);
        var roundedMouse = Math.Round(mousePosition);
        
        if(roundedMouse.X >= mousePosition.X)
        {
            roundedMouse.X -= 0.5;
        }
        else if(roundedMouse.X < mousePosition.X)
        {
            roundedMouse.X += 0.5;
        }
        
        if(roundedMouse.Y >= mousePosition.Y)
        {
            roundedMouse.Y -= 0.5;
        }
        else if(roundedMouse.Y < mousePosition.Y)
        {
            roundedMouse.Y += 0.5;
        }
        
        if(this.Transform.Translation.X - roundedMouse.X <= this.PlacingRange && this.Transform.Translation.Y - roundedMouse.Y <= this.PlacingRange)
        {
            if(Zero.Keyboard.KeyIsDown(this.IronBlockPlaceKey))
            {
                if(this.Space.GameSession.GameVars.PlayerResources >= this.IronBlockIronCost)
                {
                    this.Space.GameSession.GameVars.PlayerResources -= this.IronBlockIronCost;
                    this.Space.CreateAtPosition(this.IronBlockArchetype, roundedMouse);
                }
            } 
            
            if(Zero.Keyboard.KeyIsDown(this.PipePlaceKey))
            {
                if(this.Space.GameSession.GameVars.PlayerResources >= this.PipeIronCost 
                    && this.Space.GameSession.GameVars.PlayerAluminium >= this.PipeAluminiumCost)
                {
                    this.Space.GameSession.GameVars.PlayerResources -= this.PipeIronCost;
                    this.Space.GameSession.GameVars.PlayerAluminium -= this.PipeAluminiumCost;
                    this.Space.CreateAtPosition(this.PipeArchetype, roundedMouse);
                }
            }            
        }        
    }
}
