class Player_Movement_Script : ZilchComponent
{
    //******
    // Player_Movement_Script
    // Luke Taranowski
    // Contributors: Jakob McFarland (Movement Clamps, Particle Effects)
    // 1/23/2018
    // This script controls the players movement
    //******
    
    // Controls the players speed
    [Property]
    var Speed : Real = 5;
    
    //Jakob - Modified
    //move particlesystem
    [Property] var MovementParticleSystem : CogPath = null;
    
    //max player speed for X and Y velocities
    [Property] var MaxPlayerSpeeds : Real2 = Real2(10, 10);
    
    //min player speed for X and Y velocities
    [Property] var MinPlayerSpeeds : Real2 = Real2(-10, -10);
    
    //dependency will guarantee the owner has a rigidbody, also allows you to reference it like this 'this.rigidBody' instead of 'this.Owner.RigidBody'
    [Dependency] var RigidBody : RigidBody = null;

    
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
        if(this.GameSession.GameVars.HasUpgrade_Acceleration == true)
        {
            this.Speed += 5;
            this.GameSession.GameVars.HasUpgrade_Acceleration = false;
        }
        if(this.GameSession.GameVars.HasUpgrade_Maxspeed == true)
        {
            this.MaxPlayerSpeeds = Real2(20, 20);
            this.GameSession.GameVars.HasUpgrade_Maxspeed = false;
        }
        var newVelocity : Real3 = this.RigidBody.Velocity;
        
        var particle =  this.MovementParticleSystem.Cog;
        
        var moving : Boolean = false;
        
        // If player is pushing W move player up
        if(Zero.Keyboard.KeyIsDown(Keys.W))
        {
            newVelocity += Real3(0, 1, 0) * this.Speed * event.Dt;
            moving = true;
        }
        
        // If player is pushing A move player left
        if(Zero.Keyboard.KeyIsDown(Keys.A))
        {
            newVelocity -= Real3(1, 0, 0) * this.Speed * event.Dt;
            moving = true;
        }
        // If player is pushing S move player down
        if(Zero.Keyboard.KeyIsDown(Keys.S))
        {
            newVelocity -= Real3(0, 1, 0) * this.Speed * event.Dt;

            moving = true;
        }
        // If player is pushing D move player right
        if(Zero.Keyboard.KeyIsDown(Keys.D))
        {
            newVelocity += Real3(1, 0, 0) * this.Speed * event.Dt;
            moving = true;
        }
        
        //Velocity Clamps, so the player has a min and max speed, without these the player will accelerate forever
        newVelocity.XY = Math.Clamp(newVelocity.XY, this.MinPlayerSpeeds, this.MaxPlayerSpeeds);
        
        /*//Debug Prints
        Console.WriteLine("\n");
        Console.WriteLine(newVelocity);
        Console.WriteLine(this.RigidBody.Velocity);
        */
        if(moving)
        {
           particle.SphericalParticleEmitter.Active = true;
           this.GameSession.GameVars.PlayerActive = true;
        }
        else
        {
            particle.SphericalParticleEmitter.Active = false;
            this.GameSession.GameVars.PlayerActive = false;
        }
        
        
        this.RigidBody.Velocity = newVelocity;
        //Jakob ~ Modified
    }
}
