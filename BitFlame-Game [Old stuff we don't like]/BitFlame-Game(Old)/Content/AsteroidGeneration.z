class AsteroidGeneration : ZilchComponent
{
    [Property] var AsteroidChunk : Archetype = null;
    
    [Property] var Standalone : SpriteSource = null;
    
    [Property] var Topleft : SpriteSource = null;
    [Property] var TopCenter : SpriteSource = null;
    [Property] var TopRight : SpriteSource = null;
    
    [Property] var MiddleLeft : SpriteSource = null;
    [Property] var MiddleCenterFill  : SpriteSource = null;
    [Property] var MiddleCenterHorizontal : SpriteSource = null;
    [Property] var MiddleCenterVertical : SpriteSource = null;
    [Property] var MiddleRight : SpriteSource = null;
    
    [Property] var BottomLeft : SpriteSource = null;
    [Property] var BottomCenter : SpriteSource = null;
    [Property] var BottomRight : SpriteSource = null;
    
    [Property] var Invalid : SpriteSource = null;
    
    var AsteroidArray : Array[Cog] = new Array[Cog]();
    
    var SpriteSourcesArray : Array[delegate() : SpriteSource];
    
    var RandomGen : Random = Random();
    
    function GetStandalone              () : SpriteSource {return this.Standalone;}
    function GetTopleft                 () : SpriteSource {return this.Topleft;}
    function GetTopCenter               () : SpriteSource {return this.TopCenter;}
    function GetTopRight                () : SpriteSource {return this.TopRight;}
    function GetMiddleLeft              () : SpriteSource {return this.MiddleLeft;}
    function GetMiddleCenterFill        () : SpriteSource {return this.MiddleCenterFill;}
    function GetMiddleCenterHorizontal  () : SpriteSource {return this.MiddleCenterHorizontal;}
    function GetMiddleCenterVertical    () : SpriteSource {return this.MiddleCenterVertical;}
    function GetMiddleRight             () : SpriteSource {return this.MiddleRight;}
    function GetBottomLeft              () : SpriteSource {return this.BottomLeft;}
    function GetBottomCenter            () : SpriteSource {return this.BottomCenter;}
    function GetBottomRight             () : SpriteSource {return this.BottomRight;}
    
    function Initialize(init : CogInitializer)
    {
        this.SpriteSourcesArray = new Array[delegate() : SpriteSource]()
        {
            this.GetTopleft,
            this.GetTopCenter,
            this.GetTopRight,
            this.GetMiddleLeft,
            this.GetMiddleCenterFill,
            this.GetMiddleRight,
            this.GetBottomLeft,
            this.GetBottomCenter,
            this.GetBottomRight
        };
        
        Zero.Connect(init, Events.AllObjectsInitialized, this.OnAllObjectsInitialized);
    }

    function OnAllObjectsInitialized(event : CogInitializerEvent)
    {
        
        
        var size = this.RandomGen.Range(5, 25);
        
        foreach(var child in this.Owner.Children)
        {
            this.AsteroidArray.Add(child);
        }
        
        for(var i = 0.0; i < size; ++i)
        {
            
            if(this.AsteroidArray.Count <= 0.0) return;
            
            var index = this.RandomGen.RangeExclusiveMax(0, this.AsteroidArray.Count);
            
            var position = this.AsteroidArray[index].Transform.WorldTranslation;
             
            var asteroidChunk = this.Space.CreateAtPosition(this.AsteroidChunk, position);
            
            if(asteroidChunk != null)
            {
                asteroidChunk.AttachToRelative(this.Owner);
            }
            
            this.AsteroidArray.RemoveSwap(index);
        }
        
        foreach(var child in this.Owner.Children)
        {
            if(child.Name == "Node")
            {
                child.Destroy();
            }
        }
    }
}
