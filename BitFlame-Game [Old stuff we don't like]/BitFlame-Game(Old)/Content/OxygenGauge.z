/****************************
Filename: OxygenGauge.z
Author: Justin Smith
Contributors: NULL
Last modified: 1/25/18
Brief: Controls the OxygenGauge hud object
****************************/

class OxygenGauge : ZilchComponent
{
    
    //control the speed that oxygen decays (will be removed once oxygen decays by itself);
    [Property] var DecaySpeed : Real = 10;
    
    //i made this in case the max amount of oxygen does not = 100
    var OxygenModifier : Real = 1;
    
    var CurrentOxygen : Real = 100;
    
    var Direction : Real3 = Real3(0.0, 0.0, 0.0);
    
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
        
        this.OxygenModifier = 100 / this.GameSession.GameVars.StartingPlayerOxygen;
        
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
        this.CurrentOxygen = this.GameSession.GameVars.PlayerOxygen * this.OxygenModifier;
        if (this.CurrentOxygen > 0)
        {
            this.GameSession.GameVars.PlayerOxygen -= (this.DecaySpeed * event.Dt)/this.OxygenModifier;
            //this.CurrentOxygen -= this.DecaySpeed * event.Dt;
        }
        else
        {
            this.CurrentOxygen = 0.0;
            this.GameSession.GameVars.PlayerOxygen = 0.0;
        }
        //complicated math stuff that works but i dont understand how
        var posX : Real = 0.0;
        var posY : Real = 0.0;
        posX = 10 * Math.Cos((this.CurrentOxygen + 22) * 2.2 * 0.0174533);
        posY = 10 * Math.Sin((this.CurrentOxygen + 22) * 2.2 * 0.0174533);
        
        this.Direction = Real3(posX, posY, 0.0);
        
        //Console.WriteLine("GameVars.PlayerOxygen = `this.GameSession.GameVars.PlayerOxygen`");
    }
}

class OxygenGauge_PinController : ZilchComponent
{
    var Gauge : Cog;
    
    var Direction : Real3 = Real3(0.0, 0.0, 0.0);
    
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
        
        this.Gauge = this.Space.FindObjectByName("OxygenGauge");
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
        this.Direction = this.Gauge.OxygenGauge.Direction;
        
        this.Owner.Orientation.LookAtDirection(this.Direction);
    }
}